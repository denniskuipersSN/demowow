{{- if .Values.dashboard.create }}
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace | quote }}
  name: chaos-dashboard
  labels:
    app.kubernetes.io/name: {{ template "chaos-mesh.name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: chaos-dashboard
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+"  "_" }}
spec:
  replicas: {{ .Values.dashboard.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "chaos-mesh.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: chaos-dashboard
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "chaos-mesh.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: chaos-dashboard
    {{- with .Values.dashboard.podAnnotations }}
      annotations:
{{ toYaml . | indent 8 }}
    {{- end }}
    spec:
      {{- if .Values.dashboard.serviceAccount }}
      serviceAccount: {{ .Values.dashboard.serviceAccount }}
      {{- end }}
      priorityClassName: {{ .Values.dashboard.priorityClassName}}
      containers:
        - name: chaos-dashboard
          image: {{template "registry-prefix" .}}{{ .Values.dashboard.image }}
          imagePullPolicy: {{ .Values.dashboard.imagePullPolicy | default "IfNotPresent" }}
          resources:
{{ toYaml .Values.dashboard.resources | indent 12 }}
          command:
            - /usr/local/bin/chaos-dashboard
          env:
            {{- range $envKey, $envVal := .Values.dashboard.env }}
            - name: {{ $envKey | upper }}
              value: {{ $envVal | quote }}
            {{- end }}
            {{- if not .Values.dashboard.env.TZ }}
            - name: TZ
              value: {{ .Values.timezone | default "UTC" }}
            {{- end }}
            - name: CLUSTER_SCOPED
              value: "{{ .Values.clusterScoped }}"
            - name: TARGET_NAMESPACE
              value: {{ .Values.controllerManager.targetNamespace | quote }}
            {{- if .Values.controllerManager.allowedNamespaces }}
            - name: ALLOWED_NAMESPACES
              value: {{ .Values.controllerManager.allowedNamespaces }}
            {{- end }}
            {{- if .Values.controllerManager.ignoredNamespaces }}
            - name: IGNORED_NAMESPACES
              value: {{ .Values.controllerManager.ignoredNamespaces }}
            {{- end }}
            - name: SECURITY_MODE
              value: "{{ .Values.dashboard.securityMode }}"
            - name: DNS_SERVER_CREATE
              value: "{{ .Values.dnsServer.create }}"
          volumeMounts:
            - name: storage-volume
              mountPath: {{ .Values.dashboard.persistentVolume.mountPath }}
              subPath: "{{ .Values.dashboard.persistentVolume.subPath }}"
          ports:
            - name: http
              containerPort: {{ .Values.dashboard.env.LISTEN_PORT }}
        {{- with .Values.dashboard.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.dashboard.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.dashboard.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      volumes:
      - name: storage-volume
      {{- if .Values.dashboard.persistentVolume.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.dashboard.persistentVolume.existingClaim }}{{ .Values.dashboard.persistentVolume.existingClaim }}{{- else }}{{ template "chaos-mesh.name" . }}-chaos-dashboard{{- end }}
      {{- else }}
        emptyDir: {}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Release.Namespace | quote }}
  name: {{ template "chaos-dashboard.svc" . }}
  labels:
    app.kubernetes.io/name: {{ template "chaos-mesh.name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: chaos-dashboard
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+"  "_" }}
{{- with .Values.dashboard.service.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  selector:
    app.kubernetes.io/name: {{ template "chaos-mesh.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: chaos-dashboard
  type: {{ .Values.dashboard.service.type }}
{{- if and .Values.dashboard.service.clusterIP (eq .Values.dashboard.service.type "ClusterIP") }}
  clusterIP: {{ .Values.dashboard.service.clusterIP }}
{{- end }}
  ports:
    - protocol: TCP
      port: {{ .Values.dashboard.env.LISTEN_PORT }}
      targetPort: {{ .Values.dashboard.env.LISTEN_PORT }}
      name: http
{{- if and .Values.dashboard.service.nodePort (eq .Values.dashboard.service.type "NodePort") }}
      nodePort: {{ .Values.dashboard.service.nodePort }}
{{- end }}
{{- end }}
